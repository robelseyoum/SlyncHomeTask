// Generated by Dagger (https://dagger.dev).
package com.robelseyoum3.slynccodingchallenge.di;

import com.robelseyoum3.slynccodingchallenge.data.api.WebServices;
import com.robelseyoum3.slynccodingchallenge.data.repository.SlyncRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideSpaceRepositoryFactory implements Factory<SlyncRepository> {
  private final AppModule module;

  private final Provider<WebServices> webServicesProvider;

  public AppModule_ProvideSpaceRepositoryFactory(AppModule module,
      Provider<WebServices> webServicesProvider) {
    this.module = module;
    this.webServicesProvider = webServicesProvider;
  }

  @Override
  public SlyncRepository get() {
    return provideSpaceRepository(module, webServicesProvider.get());
  }

  public static AppModule_ProvideSpaceRepositoryFactory create(AppModule module,
      Provider<WebServices> webServicesProvider) {
    return new AppModule_ProvideSpaceRepositoryFactory(module, webServicesProvider);
  }

  public static SlyncRepository provideSpaceRepository(AppModule instance,
      WebServices webServices) {
    return Preconditions.checkNotNull(instance.provideSpaceRepository(webServices), "Cannot return null from a non-@Nullable @Provides method");
  }
}
